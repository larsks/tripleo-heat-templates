heat_template_version: rocky

description: >
  OpenStack containerized Nova SerialProxy service

parameters:
  DockerNovaSerialProxyImage:
    description: image
    type: string
  DockerNovaConfigImage:
    description: The container image to use for the nova config_volume
    type: string
  NovaSerialProxyLoggingSource:
    type: json
    default:
      tag: openstack.nova.serialproxy
      path: /var/log/containers/nova/nova-serialproxy.log
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  UpgradeRemoveUnusedPackages:
    default: false
    description: Remove package if the service is being disabled during upgrade
    type: boolean
  StackUpdateType:
    type: string
    description: >
      Type of update, to differentiate between UPGRADE and UPDATE cases
      when StackAction is UPDATE (both are the same stack action).
    constraints:
    - allowed_values: ['', 'UPGRADE', 'FASTFORWARDUPGRADE']
    default: ''


resources:

  ContainersCommon:
    type: ../../docker/services/containers-common.yaml

  MySQLClient:
    type: ../../deployment/database/mysql-client.yaml

  NovaLogging:
    type: OS::TripleO::Services::Logging::NovaCommon
    properties:
      DockerNovaImage: {get_param: DockerNovaSerialProxyImage}
      NovaServiceName: 'serialproxy'

  NovaBase:
    type: ../../puppet/services/nova-base.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Nova SerialProxy service.
    value:
      service_name: nova_serial_proxy
      config_settings:
        map_merge:
          - {get_attr: [NovaLogging, config_settings]}
          - nova::serialproxy::enabled: true
            # NOTE: bind IP is found in hiera replacing the network name with the local node IP
            # for the given network; replacement examples (eg. for internal_api):
            # internal_api -> IP
            # internal_api_uri -> [IP]
            # internal_api_subnet - > IP/CIDR
            nova::serialproxy::host:
              str_replace:
                template:
                  "%{hiera('$NETWORK')}"
                params:
                  $NETWORK: {get_param: [ServiceNetMap, NovaApiNetwork]}
            tripleo::nova_serial_proxy::firewall_rules:
              '137 nova_serial_proxy':
                dport:
                  - 6083
      service_config_settings:
        fluentd:
          tripleo_fluentd_groups_nova_serial_proxy:
            - nova
          tripleo_fluentd_sources_nova_serial_proxy:
            - {get_param: NovaSerialProxyLoggingSource}
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: nova
        puppet_tags: nova_config
        step_config:
          list_join:
            - "\n"
            - - include tripleo::profile::base::nova::serialproxy
              - {get_attr: [MySQLClient, role_data, step_config]}
        config_image: {get_param: DockerNovaConfigImage}
      kolla_config:
        /var/lib/kolla/config_files/nova_serial_proxy.json:
          command:
            list_join:
            - ' '
            - - /usr/bin/nova-serialproxy
              - get_attr: [NovaLogging, cmd_extra_args]
          config_files:
            - source: "/var/lib/kolla/config_files/src/*"
              dest: "/"
              merge: true
              preserve_properties: true
            - source: "/var/lib/kolla/config_files/src-tls/*"
              dest: "/"
              merge: true
              preserve_properties: true
              optional: true
          permissions:
            - path: /var/log/nova
              owner: nova:nova
              recurse: true
      docker_config:
        step_4:
          nova_serial_proxy:
            image: {get_param: DockerNovaSerialProxyImage}
            net: host
            privileged: false
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                - {get_attr: [NovaLogging, volumes]}
                -
                  - /var/lib/kolla/config_files/nova_serial_proxy.json:/var/lib/kolla/config_files/config.json:ro
                  - /var/lib/config-data/puppet-generated/nova/:/var/lib/kolla/config_files/src:ro
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
      host_prep_tasks: {get_attr: [NovaLogging, host_prep_tasks]}
      upgrade_tasks:
        - when: step|int == 3
          block:
            - name: Set fact for removal of openstack-nova-novncproxy package
              set_fact:
                remove_nova_serialproxy_package: {get_param: UpgradeRemoveUnusedPackages}
            - name: Remove openstack-nova-serialproxy package if operator requests it
              package: name=openstack-nova-serialproxy state=removed
              ignore_errors: True
              when: remove_nova_serialproxy_package|bool
      fast_forward_upgrade_tasks:
        - when:
            - step|int == 0
            - release == 'ocata'
          block:
            - name: Check if nova serialproxy is deployed
              command: systemctl is-enabled --quiet openstack-nova-serialproxy
              ignore_errors: True
              register: nova_serialproxy_enabled_result
            - name: Set fact nova_serialproxy_enabled
              set_fact:
                nova_serialproxy_enabled: "{{ nova_serialproxy_enabled_result.rc == 0 }}"
        - name: Stop and disable nova-serialproxy service
          service: name=openstack-nova-serialproxy state=stopped
          when:
            - step|int == 1
            - release == 'ocata'
            - nova_serialproxy_enabled|bool
      post_upgrade_tasks:
        - when: step|int == 1
          import_role:
            name: tripleo-docker-rm
          vars:
            containers_to_rm:
              - nova_serial_proxy
